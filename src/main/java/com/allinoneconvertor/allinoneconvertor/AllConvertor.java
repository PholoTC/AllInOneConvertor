/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.allinoneconvertor.allinoneconvertor;

import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.JOptionPane;

/**
 *
 * @author Teboho Pholo
 *  @version 1.0
* @since   2023-02-03
 * This is a program to converts different Quantities
 */
public class AllConvertor extends javax.swing.JFrame {

    /**
     * Creates new form AllConvertor
     */
    public AllConvertor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtValueToConvert = new javax.swing.JTextField();
        drpDwnFrom = new javax.swing.JComboBox<>();
        drpDwnTo = new javax.swing.JComboBox<>();
        btnConvert = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtPowerToConvert = new javax.swing.JTextField();
        drpDwnPowerFrom = new javax.swing.JComboBox<>();
        drpDwnPowerTo = new javax.swing.JComboBox<>();
        btnConvertPower = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtWeightToConvert = new javax.swing.JTextField();
        drpDwnWeightFrom = new javax.swing.JComboBox<>();
        drpDwnWeightTo = new javax.swing.JComboBox<>();
        btnConvertWeight = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtDistanceToConvert = new javax.swing.JTextField();
        drpDwnDistanceFrom = new javax.swing.JComboBox<>();
        drpDwnDistanceTo = new javax.swing.JComboBox<>();
        btnConvertDistance = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel1.setText("Enter the Value");

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel2.setText("From:");

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel3.setText("To: ");

        txtValueToConvert.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        txtValueToConvert.setText("0");
        txtValueToConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValueToConvertActionPerformed(evt);
            }
        });

        drpDwnFrom.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        drpDwnFrom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "US Dollar", "GB Pound", "Au Dollar", "ZA Rand", "CA Dollar", "EU Euro", "ID Rupees" }));
        drpDwnFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drpDwnFromActionPerformed(evt);
            }
        });

        drpDwnTo.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        drpDwnTo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ZA Rand", "US Dollar", "GB Pound", "Au Dollar", "EU Euro", "CA Dollar", "ID Rupees" }));
        drpDwnTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drpDwnToActionPerformed(evt);
            }
        });

        btnConvert.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btnConvert.setText("Convert");
        btnConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Sitka Subheading", 1, 24)); // NOI18N
        jLabel4.setText("Currency Convertor");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(90, 90, 90)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(drpDwnTo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnConvert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtValueToConvert, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(drpDwnFrom, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(9, 9, 9))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(29, 29, 29))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtValueToConvert, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(drpDwnFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addComponent(drpDwnTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnConvert, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Currency", jPanel1);

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel5.setText("Enter the Value");

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel6.setText("From:");

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel7.setText("To: ");

        txtPowerToConvert.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        txtPowerToConvert.setText("0");
        txtPowerToConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPowerToConvertActionPerformed(evt);
            }
        });

        drpDwnPowerFrom.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        drpDwnPowerFrom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Horse Power (HP)", "Kilowatt (KW)", " ", "Pound Foot Torque (lbf-ft)", "Newton Meters (NM)" }));
        drpDwnPowerFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drpDwnPowerFromActionPerformed(evt);
            }
        });

        drpDwnPowerTo.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        drpDwnPowerTo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kilowatt (KW)", "Horse Power (HP)", " ", "Pound Foot Torque (lbf-ft)", "Newton Meters (NM)" }));
        drpDwnPowerTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drpDwnPowerToActionPerformed(evt);
            }
        });

        btnConvertPower.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btnConvertPower.setText("Convert");
        btnConvertPower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertPowerActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Sitka Subheading", 1, 24)); // NOI18N
        jLabel8.setText("Speed Convertor");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addGap(90, 90, 90)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(drpDwnPowerTo, 0, 0, Short.MAX_VALUE)
                    .addComponent(btnConvertPower, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPowerToConvert, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(drpDwnPowerFrom, javax.swing.GroupLayout.Alignment.TRAILING, 0, 1, Short.MAX_VALUE))
                .addGap(9, 9, 9))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(29, 29, 29))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtPowerToConvert, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(drpDwnPowerFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addComponent(drpDwnPowerTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnConvertPower, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Power", jPanel2);

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel9.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel9.setText("Enter the Value");

        jLabel10.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel10.setText("From:");

        jLabel11.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel11.setText("To: ");

        txtWeightToConvert.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        txtWeightToConvert.setText("0");
        txtWeightToConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWeightToConvertActionPerformed(evt);
            }
        });

        drpDwnWeightFrom.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        drpDwnWeightFrom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pound (lb)", "Kilogram (Kg)" }));
        drpDwnWeightFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drpDwnWeightFromActionPerformed(evt);
            }
        });

        drpDwnWeightTo.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        drpDwnWeightTo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kilogram (Kg)", "Pound (lb)", " " }));
        drpDwnWeightTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drpDwnWeightToActionPerformed(evt);
            }
        });

        btnConvertWeight.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btnConvertWeight.setText("Convert");
        btnConvertWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertWeightActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Sitka Subheading", 1, 24)); // NOI18N
        jLabel12.setText("Weight Convertor");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10))
                .addGap(90, 90, 90)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(drpDwnWeightTo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnConvertWeight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtWeightToConvert, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(drpDwnWeightFrom, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(9, 9, 9))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(29, 29, 29))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtWeightToConvert, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(drpDwnWeightFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addComponent(drpDwnWeightTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnConvertWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Weight", jPanel3);

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel13.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel13.setText("Enter the Value");

        jLabel14.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel14.setText("From:");

        jLabel15.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel15.setText("To: ");

        txtDistanceToConvert.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        txtDistanceToConvert.setText("0");
        txtDistanceToConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDistanceToConvertActionPerformed(evt);
            }
        });

        drpDwnDistanceFrom.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        drpDwnDistanceFrom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mile (mi)", "inch (in)", "Foot (ft)", "Yard (yrd)", "Centimeters (cm)", "Meters (m)", "KiloMeters (km)", " " }));
        drpDwnDistanceFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drpDwnDistanceFromActionPerformed(evt);
            }
        });

        drpDwnDistanceTo.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        drpDwnDistanceTo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Meters (m)", "Centimeters (cm)", "KiloMeters (km)", "inch (in)", "Foot (ft)", "Yard (yrd)", "Mile (mi)", " " }));
        drpDwnDistanceTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drpDwnDistanceToActionPerformed(evt);
            }
        });

        btnConvertDistance.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btnConvertDistance.setText("Convert");
        btnConvertDistance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertDistanceActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Sitka Subheading", 1, 24)); // NOI18N
        jLabel16.setText("Distance Convertor");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel15)
                    .addComponent(jLabel14))
                .addGap(90, 90, 90)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(drpDwnDistanceTo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnConvertDistance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDistanceToConvert, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                    .addComponent(drpDwnDistanceFrom, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(9, 9, 9))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel16)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(29, 29, 29))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(txtDistanceToConvert)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(drpDwnDistanceFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(18, 18, 18)
                        .addComponent(drpDwnDistanceTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnConvertDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Distance", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     *@buttonClick Convert weight
     *When Weight convert button is clicked,using if statement to compare user inputs and display out puts
        US Dollar
        GB Pound
        Au Dollar
        ZA Rand
        CA Dollar
        EU Euro
        ID Rupees
         */
    private void btnConvertWeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertWeightActionPerformed
        // Kilogram (Kg)
        Double Total;
        Double amount = Double.valueOf(txtWeightToConvert.getText());

        //Conversion from  Weight
        if (drpDwnWeightFrom.getSelectedItem().toString().equals("Pound (lb)")
                && drpDwnWeightTo.getSelectedItem().toString().equals("Kilogram (Kg)")) {
            Total = amount * 0.453592;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "Kg");
        } else if (drpDwnWeightFrom.getSelectedItem().toString().equals("Kilogram (Kg)")
                && drpDwnWeightTo.getSelectedItem().toString().equals("Pound (lb)")) {
            Total = amount * 2.20462;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "lb");
        }
    }//GEN-LAST:event_btnConvertWeightActionPerformed

    private void drpDwnWeightToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drpDwnWeightToActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drpDwnWeightToActionPerformed

    private void drpDwnWeightFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drpDwnWeightFromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drpDwnWeightFromActionPerformed

    private void txtWeightToConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWeightToConvertActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWeightToConvertActionPerformed

    /**
     *@buttonClick Convert Power
     *When Power convert button is clicked,using if statement to compare user inputs and display out puts
        Horse Power (HP)
        Kilowatt (KW)

        Pound Foot Torque (lbf-ft)
        Newton Meters (NM)
     */
    private void btnConvertPowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertPowerActionPerformed
        Double Total;
        Double amount = Double.valueOf(txtPowerToConvert.getText());

        //Conversion from  Power
        if (drpDwnPowerFrom.getSelectedItem().toString().equals("Horse Power (HP)")
                && drpDwnPowerTo.getSelectedItem().toString().equals("Kilowatt (KW)")) {
            Total = amount * 0.7457;
            DecimalFormat myFormatter = new DecimalFormat("	###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "KW");
        } else if (drpDwnPowerFrom.getSelectedItem().toString().equals("Kilowatt (KW)")
                && drpDwnPowerTo.getSelectedItem().toString().equals("Horse Power (HP)")) {
            Total = amount * 1.34102;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "HP");
        }

        //Conversion from Torque
        if (drpDwnPowerFrom.getSelectedItem().toString().equals("Pound Foot Torque (lbf-ft)")
                && drpDwnPowerTo.getSelectedItem().toString().equals("Newton Meters (NM)")) {
            Total = amount * 1.35582;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "nm");
        } else if (drpDwnPowerFrom.getSelectedItem().toString().equals("Newton Meters (NM)")
                && drpDwnPowerTo.getSelectedItem().toString().equals("Pound Foot Torque (lbf-ft)")) {
            Total = amount * 0.737562;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "lbf-ft");
        }
    }//GEN-LAST:event_btnConvertPowerActionPerformed

    private void drpDwnPowerToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drpDwnPowerToActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drpDwnPowerToActionPerformed

    private void drpDwnPowerFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drpDwnPowerFromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drpDwnPowerFromActionPerformed

    private void txtPowerToConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPowerToConvertActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPowerToConvertActionPerformed

        /**
     *@buttonClick Convert Currency
     *When Currency convert button is clicked,using if statement to compare user inputs and display out puts
        US Dollar, GB Pound, Au Dollar, ZA Rand, CA Dollar, EU Euro, ID Rupees
     */
    private void btnConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertActionPerformed

        Double Total;
        Double amount = Double.valueOf(txtValueToConvert.getText());

        //Conversion from US Dollar
        if (drpDwnFrom.getSelectedItem().toString().equals("US Dollar")
                && drpDwnTo.getSelectedItem().toString().equals("ZA Rand")) {
            Total = amount * 16.75;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.US.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);
        } else if (drpDwnFrom.getSelectedItem().toString().equals("US Dollar")
                && drpDwnTo.getSelectedItem().toString().equals("GB Pound")) {
            Total = amount * 11.30;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.UK.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("US Dollar")
                && drpDwnTo.getSelectedItem().toString().equals("Au Dollar")) {
            Total = amount * 1.5;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.US.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("US Dollar")
                && drpDwnTo.getSelectedItem().toString().equals("EU Euro")) {
            Total = amount * 0.94;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.ENGLISH.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("US Dollar")
                && drpDwnTo.getSelectedItem().toString().equals("ID Rupees")) {
            Total = amount * 82.7;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.ENGLISH.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("US Dollar")
                && drpDwnTo.getSelectedItem().toString().equals("CA Dollar")) {
            Total = amount * 1.33;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.ENGLISH.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        }

        //conversion from Pounds
        if (drpDwnFrom.getSelectedItem().toString().equals("GB Pound")
                && drpDwnTo.getSelectedItem().toString().equals("ZA Rand")) {
            Total = amount * 21.2;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale("en", "ZAR"));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);
        } else if (drpDwnFrom.getSelectedItem().toString().equals("GB Pound")
                && drpDwnTo.getSelectedItem().toString().equals("US Dollar")) {
            Total = amount * 1.2;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.US.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("GB Pound")
                && drpDwnTo.getSelectedItem().toString().equals("Au Dollar")) {
            Total = amount * 1.7;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.US.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("GB Pound")
                && drpDwnTo.getSelectedItem().toString().equals("EU Euro")) {
            Total = amount * 1.2;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.ENGLISH.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("GB Pound")
                && drpDwnTo.getSelectedItem().toString().equals("ID Rupees")) {
            Total = amount * 89.5;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.ENGLISH.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("GB Pound")
                && drpDwnTo.getSelectedItem().toString().equals("CA Dollar")) {
            Total = amount * 1.6;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.ENGLISH.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        }

        //conversion from Australian Dollar
        if (drpDwnFrom.getSelectedItem().toString().equals("Au Dollar")
                && drpDwnTo.getSelectedItem().toString().equals("ZA Rand")) {
            Total = amount * 12.2;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale("en", "ZAR"));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);
        } else if (drpDwnFrom.getSelectedItem().toString().equals("Au Dollar")
                && drpDwnTo.getSelectedItem().toString().equals("US Dollar")) {
            Total = amount * 0.7;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.US.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("Au Dollar")
                && drpDwnTo.getSelectedItem().toString().equals("GB Pound")) {
            Total = amount * 0.57;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.US.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("Au Dollar")
                && drpDwnTo.getSelectedItem().toString().equals("EU Euro")) {
            Total = amount * 0.64;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.ENGLISH.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("Au Dollar")
                && drpDwnTo.getSelectedItem().toString().equals("ID Rupees")) {
            Total = amount * 57.3;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.ENGLISH.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("Au Dollar")
                && drpDwnTo.getSelectedItem().toString().equals("CA Dollar")) {
            Total = amount * 0.93;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.ENGLISH.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        }

        //conversion from ZAR
        if (drpDwnFrom.getSelectedItem().toString().equals("ZA Rand")
                && drpDwnTo.getSelectedItem().toString().equals("Au Dollar")) {
            Total = amount * 0.08;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale("en", "Au Dollar"));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);
        } else if (drpDwnFrom.getSelectedItem().toString().equals("ZA Rand")
                && drpDwnTo.getSelectedItem().toString().equals("CA Dollar")) {
            Total = amount * 0.07;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.ENGLISH.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("ZA Rand")
                && drpDwnTo.getSelectedItem().toString().equals("US Dollar")) {
            Total = amount * 0.05;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.US.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("ZA Rand")
                && drpDwnTo.getSelectedItem().toString().equals("GB Pound")) {
            Total = amount * 0.05;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.US.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("ZA Rand")
                && drpDwnTo.getSelectedItem().toString().equals("EU Euro")) {
            Total = amount * 0.05;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.ENGLISH.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("ZA Rand")
                && drpDwnTo.getSelectedItem().toString().equals("ID Rupees")) {
            Total = amount * 4.6;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.ENGLISH.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        }

        //Conversion from Canadian Dollar
        if (drpDwnFrom.getSelectedItem().toString().equals("CA Dollar")
                && drpDwnTo.getSelectedItem().toString().equals("Au Dollar")) {
            Total = amount * 1.07;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale("en", "Au Dollar"));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);
        } else if (drpDwnFrom.getSelectedItem().toString().equals("CA Dollar")
                && drpDwnTo.getSelectedItem().toString().equals("ZA Rand")) {
            Total = amount * 13.0;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.ENGLISH.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("CA Dollar")
                && drpDwnTo.getSelectedItem().toString().equals("US Dollar")) {
            Total = amount * 0.74;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.US.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("CA Dollar")
                && drpDwnTo.getSelectedItem().toString().equals("GB Pound")) {
            Total = amount * 0.61;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.US.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("CA Dollar")
                && drpDwnTo.getSelectedItem().toString().equals("EU Euro")) {
            Total = amount * 0.69;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.ENGLISH.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("CA Dollar")
                && drpDwnTo.getSelectedItem().toString().equals("ID Rupees")) {
            Total = amount * 61.7;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.ENGLISH.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        }

        //Conversion from Euros
        if (drpDwnFrom.getSelectedItem().toString().equals("EU Euro")
                && drpDwnTo.getSelectedItem().toString().equals("Au Dollar")) {
            Total = amount * 1.53;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale("en", "Au Dollar"));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);
        } else if (drpDwnFrom.getSelectedItem().toString().equals("EU Euro")
                && drpDwnTo.getSelectedItem().toString().equals("ZA Rand")) {
            Total = amount * 18.83;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.ENGLISH.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("EU Euro")
                && drpDwnTo.getSelectedItem().toString().equals("US Dollar")) {
            Total = amount * 1.07;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.US.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("CA Dollar")
                && drpDwnTo.getSelectedItem().toString().equals("GB Pound")) {
            Total = amount * 0.89;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.US.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("EU Euro")
                && drpDwnTo.getSelectedItem().toString().equals("CA Dollar")) {
            Total = amount * 1.43;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.ENGLISH.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("EU Euro")
                && drpDwnTo.getSelectedItem().toString().equals("ID Rupees")) {
            Total = amount * 88.6;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.ENGLISH.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        }

        //Conversion from Ruppees
        if (drpDwnFrom.getSelectedItem().toString().equals("ID Rupees")
                && drpDwnTo.getSelectedItem().toString().equals("Au Dollar")) {
            Total = amount * 1.01;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale("en", "Au Dollar"));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);
        } else if (drpDwnFrom.getSelectedItem().toString().equals("ID Rupees")
                && drpDwnTo.getSelectedItem().toString().equals("ZA Rand")) {
            Total = amount * 0.21;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.ENGLISH.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("ID Rupees")
                && drpDwnTo.getSelectedItem().toString().equals("US Dollar")) {
            Total = amount * 0.01;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.US.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("ID Rupees")
                && drpDwnTo.getSelectedItem().toString().equals("GB Pound")) {
            Total = amount * 0.01;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.US.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("ID Rupees")
                && drpDwnTo.getSelectedItem().toString().equals("EU Euro")) {
            Total = amount * 0.01;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.ENGLISH.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        } else if (drpDwnFrom.getSelectedItem().toString().equals("ID Rupees")
                && drpDwnTo.getSelectedItem().toString().equals("CA Dollar")) {
            Total = amount * 0.01;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(Locale.ENGLISH.getCountry()));
            String moneyString = formatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + moneyString);

        }
    }//GEN-LAST:event_btnConvertActionPerformed

    private void drpDwnToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drpDwnToActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drpDwnToActionPerformed

    private void drpDwnFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drpDwnFromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drpDwnFromActionPerformed

    private void txtValueToConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValueToConvertActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValueToConvertActionPerformed

    private void txtDistanceToConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDistanceToConvertActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDistanceToConvertActionPerformed

    private void drpDwnDistanceFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drpDwnDistanceFromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drpDwnDistanceFromActionPerformed

    private void drpDwnDistanceToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drpDwnDistanceToActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drpDwnDistanceToActionPerformed

            /**
     *@buttonClick Convert Distance
     *When Distance convert button is clicked,using if statement to compare user inputs and display out puts
     * Mile (mi), inch (in), Foot (ft), Yard (yrd), Centimeters (cm), Meters (m), KiloMeters (km)
*/
    private void btnConvertDistanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertDistanceActionPerformed

        Double Total;
        Double amount = Double.valueOf(txtDistanceToConvert.getText());

        //Conversion from  Miles
        if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Mile (mi)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("inch (in)")) {
            Total = amount * 63360;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "in");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Mile (mi)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Foot (ft)")) {
            Total = amount * 5280;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "ft");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Mile (mi)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Yard (yrd)")) {
            Total = amount * 1760;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "yrd");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Mile (mi)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Centimeters (cm)")) {
            Total = amount * 160934;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "ft");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Mile (mi)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Meters (m)")) {
            Total = amount * 1609.34;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "m");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Mile (mi)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("KiloMeters (km)")) {
            Total = amount * 1.60933999997549;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "km");
        }

        //Conversion from  Inches
        if (drpDwnDistanceFrom.getSelectedItem().toString().equals("inch (in)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Mile (mi)")) {
            Total = amount * 0.00001578282197;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "mi");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("inch (in)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Foot (ft)")) {
            Total = amount * 0.0833333;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "ft");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("inch (in)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Yard (yrd)")) {
            Total = amount * 0.0277778;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "yrd");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("inch (in)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Centimeters (cm)")) {
            Total = amount * 2.540002032;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "ft");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("inch (in)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Meters (m)")) {
            Total = amount * 0.02540002032;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "m");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("inch (in)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("KiloMeters (km)")) {
            Total = amount * 0.00002540002032;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "km");
        }

        //Conversion from  Foot
        if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Foot (ft)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Mile (mi)")) {
            Total = amount * 0.0003048;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "mi");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Foot (ft)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("inch (in)")) {
            Total = amount * 12;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "ft");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Foot (ft)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Yard (yrd)")) {
            Total = amount * 0.333333;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "yrd");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Foot (ft)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Centimeters (cm)")) {
            Total = amount * 30.48;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "ft");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Foot (ft)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Meters (m)")) {
            Total = amount * 0.3048;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "m");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Foot (ft)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("KiloMeters (km)")) {
            Total = amount * 0.0003048;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "km");
        }

        //Conversion from  Yard
        if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Yard (yrd)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Mile (mi)")) {
            Total = amount * 0.000568182;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "mi");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Yard (yrd)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("inch (in)")) {
            Total = amount * 36;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "in");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Yard (yrd)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Foot (ft)")) {
            Total = amount * 3;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "ft");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Yard (yrd)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Centimeters (cm)")) {
            Total = amount * 91.44;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "cm");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Yard (yrd)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Meters (m)")) {
            Total = amount * 0.9144;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "m");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Yard (yrd)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("KiloMeters (km)")) {
            Total = amount * 0.0009144;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "km");
        }

        //Conversion from  Centimeters (cm)
        if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Centimeters (cm)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Mile (mi)")) {
            Total = amount * 0.0000062137;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "mi");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Centimeters (cm)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("inch (in)")) {
            Total = amount * 0.393701;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "in");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Centimeters (cm)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Foot (ft)")) {
            Total = amount * 0.0328084;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "ft");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Centimeters (cm)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Yard (yrd)")) {
            Total = amount * 0.0109361;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "yrd");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Centimeters (cm)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Meters (m)")) {
            Total = amount * 0.01;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "m");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Centimeters (cm)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("KiloMeters (km)")) {
            Total = amount * 0.00001;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "km");
        }

        //Conversion from  Meters (m)
        if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Meters (m)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Mile (mi)")) {
            Total = amount * 0.000621371;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "mi");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Meters (m)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("inch (in)")) {
            Total = amount * 39.3701;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "in");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Meters (m)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Foot (ft)")) {
            Total = amount * 3.28084;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "ft");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Meters (m)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Yard (yrd)")) {
            Total = amount * 1.09361;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "yrd");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Meters (m)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Centimeters (cm)")) {
            Total = amount * 100;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "cm");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("Meters (m)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("KiloMeters (km)")) {
            Total = amount * 0.001;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "km");
        }

        //Conversion from  KiloMeters (km)
        if (drpDwnDistanceFrom.getSelectedItem().toString().equals("KiloMeters (km)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Mile (mi)")) {
            Total = amount * 0.621371;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "mi");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("KiloMeters (km)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("inch (in)")) {
            Total = amount * 39370.1;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "in");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("KiloMeters (km)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Foot (ft)")) {
            Total = amount * 3280.84;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "ft");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("KiloMeters (km)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Yard (yrd)")) {
            Total = amount * 1093.61;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "yrd");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("KiloMeters (km)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Centimeters (cm)")) {
            Total = amount * 100000;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "cm");
        } else if (drpDwnDistanceFrom.getSelectedItem().toString().equals("KiloMeters (km)")
                && drpDwnDistanceTo.getSelectedItem().toString().equals("Meters (m)")) {
            Total = amount * 1000;
            DecimalFormat myFormatter = new DecimalFormat("###,###.###");
            String output = myFormatter.format(Total);
            JOptionPane.showMessageDialog(this, "Value is " + output + "m");
        }


    }//GEN-LAST:event_btnConvertDistanceActionPerformed

    /**
     *    * This is the main method which initializes the Jswing components and displays the form
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllConvertor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllConvertor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllConvertor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllConvertor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /**
        Create and display the form 
        @param None
        @return void
        *@exception none to throw
        */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AllConvertor().setVisible(true);
            }
        });
    }
    
    /**
     *declare JSwing variables 
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConvert;
    private javax.swing.JButton btnConvertDistance;
    private javax.swing.JButton btnConvertPower;
    private javax.swing.JButton btnConvertWeight;
    private javax.swing.JComboBox<String> drpDwnDistanceFrom;
    private javax.swing.JComboBox<String> drpDwnDistanceTo;
    private javax.swing.JComboBox<String> drpDwnFrom;
    private javax.swing.JComboBox<String> drpDwnPowerFrom;
    private javax.swing.JComboBox<String> drpDwnPowerTo;
    private javax.swing.JComboBox<String> drpDwnTo;
    private javax.swing.JComboBox<String> drpDwnWeightFrom;
    private javax.swing.JComboBox<String> drpDwnWeightTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField txtDistanceToConvert;
    private javax.swing.JTextField txtPowerToConvert;
    private javax.swing.JTextField txtValueToConvert;
    private javax.swing.JTextField txtWeightToConvert;
    // End of variables declaration//GEN-END:variables
}
